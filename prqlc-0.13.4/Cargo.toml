# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70.0"
name = "prqlc"
version = "0.13.4"
build = "build.rs"
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "PRQL is a modern language for transforming data â€” a simple, powerful, pipelined SQL replacement."
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/PRQL/prql"

[package.metadata]
msrv = "1.73.0"

[[package.metadata.release.pre-release-replacements]]
exactly = 1
file = "../packages/snap/snapcraft.yaml"
replace = 'version: "{{version}}"'
search = '^version: "[\d.]+"$'

[[package.metadata.release.pre-release-replacements]]
exactly = 1
file = "../../web/book/src/project/target.md"
replace = 'prql version:"{{prev_version}}"'
search = 'prql version:"[\d.]+"'

[[package.metadata.release.pre-release-replacements]]
exactly = 1
file = "../../CHANGELOG.md"
replace = """
# PRQL Changelog

## [unreleased]

**Language**:

**Features**:

**Fixes**:

**Documentation**:

**Web**:

**Integrations**:

**Internal changes**:

**New Contributors**:

"""
search = """
# PRQL Changelog

"""

[lib]
name = "prqlc"
path = "src/lib.rs"
bench = false

[[bin]]
name = "prqlc"
path = "src/main.rs"
bench = false

[[test]]
name = "integration"
path = "tests/integration/main.rs"

[[bench]]
name = "bench"
path = "benches/bench.rs"
harness = false

[dependencies.anstream]
version = "0.6.18"
features = ["auto"]

[dependencies.ariadne]
version = "0.5.0"

[dependencies.chrono]
version = "0.4.39"

[dependencies.csv]
version = "1.3.1"

[dependencies.enum-as-inner]
version = "0.6.1"

[dependencies.itertools]
version = "0.13.0"

[dependencies.log]
version = "0.4.25"

[dependencies.prqlc-parser]
version = "0.13.4"

[dependencies.regex]
version = "1.11.1"

[dependencies.schemars]
version = "1.0.0-alpha.17"

[dependencies.semver]
version = "1.0.25"
features = ["serde"]

[dependencies.serde]
version = "1.0.217"
features = ["derive"]

[dependencies.serde_json]
version = "1.0.138"

[dependencies.serde_yaml]
version = "0.9.34"
optional = true

[dependencies.sqlformat]
version = "0.3.5"

[dependencies.sqlparser]
version = "0.53.0"
features = ["serde"]

[dependencies.strum]
version = "0.27.0"
features = [
    "std",
    "derive",
]

[dependencies.strum_macros]
version = "0.27.0"

[dev-dependencies.criterion]
version = "0.5.1"
default-features = false

[dev-dependencies.glob]
version = "0.3.2"

[dev-dependencies.insta]
version = "1.41.1"
features = [
    "colors",
    "glob",
    "yaml",
    "filters",
]

[dev-dependencies.insta-cmd]
version = "0.6.0"

[dev-dependencies.rstest]
version = "0.24.0"

[dev-dependencies.similar]
version = "2.7.0"

[dev-dependencies.similar-asserts]
version = "1.6.1"

[dev-dependencies.tempfile]
version = "3.17.1"

[dev-dependencies.test_each_file]
version = "0.3.4"

[build-dependencies.vergen-gitcl]
version = "1.0.0"
features = ["build"]

[features]
cli = [
    "anyhow",
    "clap_complete_command",
    "clap",
    "clio",
    "color-eyre",
    "colorchoice-clap",
    "is-terminal",
    "minijinja",
    "notify",
    "serde_yaml",
    "walkdir",
]
default = ["cli"]
serde_yaml = [
    "prqlc-parser/serde_yaml",
    "dep:serde_yaml",
]
test-dbs = [
    "rusqlite",
    "duckdb",
    "connector_arrow",
    "connector_arrow/src_sqlite",
    "connector_arrow/src_duckdb",
]
test-dbs-external = [
    "test-dbs",
    "postgres",
    "mysql",
    "tiberius",
    "futures",
    "tokio",
    "tokio-util",
    "connector_arrow/src_mysql",
    "connector_arrow/src_postgres",
    "connector_arrow/src_tiberius",
]

[target.'cfg(not(target_family="wasm"))'.dependencies.anyhow]
version = "1.0.95"
features = ["backtrace"]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.clap]
version = "4.4.18"
features = [
    "derive",
    "env",
    "wrap_help",
]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.clap_complete_command]
version = "0.5.1"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.clio]
version = "0.3.3"
features = ["clap-parse"]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.color-eyre]
version = "0.6.3"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.colorchoice-clap]
version = "1.0.0"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.connector_arrow]
version = "0.6.0"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.duckdb]
version = "1.1.1"
features = [
    "bundled",
    "chrono",
]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.futures]
version = "0.3.31"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.is-terminal]
version = "0.4.15"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.minijinja]
version = "2.7.0"
features = ["unstable_machinery"]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.mysql]
version = "25"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.notify]
version = "7.0.0"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.postgres]
version = "0.19.10"
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.rusqlite]
version = "0.32.0"
features = [
    "bundled",
    "csvtab",
]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.tiberius]
version = "0.12.3"
features = [
    "sql-browser-tokio",
    "bigdecimal",
    "time",
    "rustls",
    "tds73",
]
optional = true
default-features = false

[target.'cfg(not(target_family="wasm"))'.dependencies.tokio]
version = "1.43.0"
features = ["full"]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.tokio-util]
version = "0.7.13"
features = ["compat"]
optional = true

[target.'cfg(not(target_family="wasm"))'.dependencies.walkdir]
version = "2.5.0"
optional = true

[lints.clippy]
result_large_err = "allow"

[lints.rust]
unsafe_code = "forbid"
